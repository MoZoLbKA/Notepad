<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>